"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.defaultExcludeFields = defaultExcludeFields;
exports.parsePrimaryKeyinputFields = parsePrimaryKeyinputFields;
exports.argsToSequelize = argsToSequelize;
exports.resolveEdge = resolveEdge;

var _graphql = require("graphql");

var _graphqlRelay = require("graphql-relay");

var _cursor = require("./cursor");

function defaultExcludeFields(model, exclude) {
  return Object.keys(model.tableAttributes).reduce(function (data, current) {
    var item = model.tableAttributes[current];

    if (item.primaryKey || item._autoGenerated) {
      data.push(current);
    }

    return data;
  }, exclude);
}

function parsePrimaryKeyinputFields(model, options) {
  var _ref = options || {},
      exclude = _ref.exclude;

  return Object.keys(model.tableAttributes).reduce(function (data, current) {
    var item = model.tableAttributes[current];

    if (item.primaryKey && (!exclude || exclude.indexOf(current) === -1)) {
      data[current] = { type: item.allowNull ? _graphql.GraphQLString : new _graphql.GraphQLNonNull(_graphql.GraphQLString) };
    }

    return data;
  }, {});
}

function argsToSequelize(model, args) {
  return Object.keys(args).reduce(function (data, current) {
    if (model.tableAttributes[current]) {
      data[current] = model.tableAttributes[current].primaryKey ? parseInt((0, _graphqlRelay.fromGlobalId)(args[current]).id, 10) : args[current];
    }

    return data;
  }, {});
}

function resolveEdge(source) {
  return source ? { node: source, cursor: (0, _cursor.toCursor)(source) } : null;
}