import {
  GraphQLNonNull,
  GraphQLString
} from "graphql";

import {
  fromGlobalId
} from "graphql-relay";

import {
  toCursor
} from "./cursor";

export function defaultExcludeFields(model, exclude) {
  return Object.keys(model.tableAttributes).reduce(function (data, current) {
    const item = model.tableAttributes[current];

    if (item.primaryKey || item._autoGenerated) {
      data.push(current);
    }

    return data;
  }, exclude);
}

export function parsePrimaryKeyinputFields(model, options) {
  const { exclude } = options || {};
  return Object.keys(model.tableAttributes).reduce(function (data, current) {
    const item = model.tableAttributes[current];

    if (item.primaryKey && (!exclude || exclude.indexOf(current) === -1)) {
      data[current] = { type: item.allowNull ? GraphQLString : new GraphQLNonNull(GraphQLString) };
    }

    return data;
  }, {});
}

export function argsToSequelize(model, args) {
  return Object.keys(args).reduce(function (data, current) {
    if (model.tableAttributes[current]) {
      data[current] = model.tableAttributes[current].primaryKey ? parseInt(fromGlobalId(args[current]).id, 10) : args[current];
    }

    return data;
  }, {});
}

export function resolveEdge(source) {
  return source ? { node: source, cursor: toCursor(source) } : null;
}